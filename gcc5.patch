Index: libchromiumcontent-47.0.2526.110/vendor/chromium/src/build/compiler_version.py
===================================================================
--- libchromiumcontent-47.0.2526.110.orig/vendor/chromium/src/build/compiler_version.py
+++ libchromiumcontent-47.0.2526.110/vendor/chromium/src/build/compiler_version.py
@@ -56,7 +56,7 @@ def GetVersion(compiler, tool):
     if tool == "compiler":
       compiler = compiler + " -dumpversion"
       # 4.6
-      version_re = re.compile(r"(\d+)\.(\d+)")
+      version_re = re.compile(r"(\d+)")
     elif tool == "assembler":
       compiler = compiler + " -Xassembler --version -x assembler -c /dev/null"
       # Unmodified: GNU assembler (GNU Binutils) 2.24
@@ -88,7 +88,11 @@ def GetVersion(compiler, tool):
       raise subprocess.CalledProcessError(pipe.returncode, compiler)
 
     parsed_output = version_re.match(tool_output)
-    result = parsed_output.group(1) + parsed_output.group(2)
+    if tool == "compiler":
+      result = parsed_output.group(1) + "1"
+    else:
+      result = parsed_output.group(1) + parsed_output.group(2)
+
     compiler_version_cache[cache_key] = result
     return result
   except Exception, e:
Index: libchromiumcontent-47.0.2526.110/vendor/chromium/src/native_client/build/compiler_version.py
===================================================================
--- libchromiumcontent-47.0.2526.110.orig/vendor/chromium/src/native_client/build/compiler_version.py
+++ libchromiumcontent-47.0.2526.110/vendor/chromium/src/native_client/build/compiler_version.py
@@ -56,7 +56,7 @@ def GetVersion(compiler, tool):
     if tool == "compiler":
       compiler = compiler + " -dumpversion"
       # 4.6
-      version_re = re.compile(r"(\d+)\.(\d+)")
+      version_re = re.compile(r"(\d+)")
     elif tool == "assembler":
       compiler = compiler + " -Xassembler --version -x assembler -c /dev/null"
       # Unmodified: GNU assembler (GNU Binutils) 2.24
@@ -88,7 +88,11 @@ def GetVersion(compiler, tool):
       raise subprocess.CalledProcessError(pipe.returncode, compiler)
 
     parsed_output = version_re.match(tool_output)
-    result = parsed_output.group(1) + parsed_output.group(2)
+    if tool == "compiler":
+      result = parsed_output.group(1) + "1"
+    else:
+      result = parsed_output.group(1) + parsed_output.group(2)
+
     compiler_version_cache[cache_key] = result
     return result
   except Exception, e:
